     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit, scanf, printf
     6                                  
     7                                  import exit msvcrt.dll
     8                                  import scanf msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  %include "modul.asm" ; concatenare
     1                              <1> ; citire siruri
     2                              <1> %ifndef _MODUL_ASM_
     3                              <1> %define _MAIN_ASM_
     4                              <1> 
     5                              <1> concatenare:
     6                              <1> 
     7                              <1>         ;mov ecx, [esp+12]
     8                              <1>         ;mov edx, [esp+16]
     9                              <1>         
    10 00000000 8B7C2414            <1>         mov edi, [esp+20] ; rez
    11                              <1>         
    12                              <1>         ;mov esi, [esp+8]
    13                              <1>         
    14 00000004 B902000000          <1>         mov ecx, 2
    15                              <1>         
    16                              <1>         loop2:
    17                              <1>         
    18 00000009 83F905              <1>             cmp ecx, 5
    19 0000000C 740E                <1>             je endloop2
    20                              <1>             
    21 0000000E 8B348C              <1>             mov esi, [esp+4*ecx] ; ia fiecare sir
    22                              <1>             
    23                              <1>             loop1:
    24                              <1>                 
    25 00000011 AC                  <1>                 lodsb
    26                              <1>                 
    27 00000012 3C00                <1>                 cmp al, 0
    28 00000014 EB03                <1>                 jmp endloop1
    29                              <1>                 
    30 00000016 AA                  <1>                 stosb
    31                              <1>                 
    32 00000017 EBF8                <1>             jmp loop1
    33                              <1>             
    34                              <1>         endloop1:
    35                              <1>         
    36 00000019 41                  <1>         inc ecx
    37 0000001A EBED                <1>         jmp loop2
    38                              <1>        
    39                              <1>         endloop2:
    40                              <1> 
    41 0000001C C3                  <1>         ret
    42                              <1>         
    43                              <1> %endif
    12                                  
    13                                  ; 6. Se citesc trei siruri de caractere. Sa se determine si sa se afiseze rezultatul concatenarii lor.
    14                                  data segment public data
    15                                          
    16 0000001D <res 0000000A>                  s1 resb 10
    17 00000027 <res 0000000A>                  s2 resb 10
    18 00000031 <res 0000000A>                  s3 resb 10
    19 0000003B 257320257320257300              format db "%s %s %s", 0
    20 00000044 257300                          format1 db"%s", 0
    21                                          
    22 00000047 <res 000000C8>                  rez resb 200
    23                                  
    24                                  code segment public code
    25                                  
    26                                      start:
    27                                          
    28 0000010F 68[31000000]                    push dword s3
    29 00000114 68[27000000]                    push dword s2
    30 00000119 68[1D000000]                    push dword s1
    31 0000011E 68[3B000000]                    push dword format
    32 00000123 FF15[00000000]                  call [scanf]
    33 00000129 83C410                          add esp, 4*4
    34                                          
    35 0000012C 68[47000000]                    push rez
    36 00000131 68[31000000]                    push s3
    37 00000136 68[27000000]                    push s2
    38 0000013B 68[1D000000]                    push s1
    39 00000140 E8BBFEFFFF                      call concatenare
    40 00000145 83C410                          add esp, 4*4
    41                                          
    42 00000148 68[47000000]                    push rez
    43 0000014D 68[44000000]                    push format1
    44 00000152 FF15[00000000]                  call [printf]
    45 00000158 83C408                          add esp, 4*2
    46                                  
    47 0000015B 6A00                            push 0
    48 0000015D FF15[00000000]                  call [exit]
    49                                          
    50                                         
    51                                     
