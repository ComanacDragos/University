     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, scanf, fprintf, fopen
     5                                  import fopen msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import fprintf msvcrt.dll
     8                                  import exit msvcrt.dll
     9                                  
    10                                  segment data use32 class=data
    11 00000000 66696C652E74787400          file_name db "file.txt", 0
    12 00000009 257300                      f_str db "%s", 0
    13 0000000C 2400                        stop db "$", 0
    14 0000000E 7700000000000000            mode dd "w", 0
    15 00000016 <res 00000064>              buffer resb 100
    16 0000007A <res 00000004>              d_f resd 1
    17 0000007E 25730A00                    f_d db "%s", 10, 0
    18                                      
    19                                  segment code use32 class=code
    20                                  ;  cititm mai multe siruri pana citim $
    21                                  ; le scriem in fisier daca au cel putin o litera mica
    22                                      start:
    23 00000000 68[0E000000]                push mode
    24 00000005 68[00000000]                push file_name
    25 0000000A FF15[00000000]              call [fopen]
    26 00000010 83C408                      add ESP, 4*2
    27                                      
    28                                      
    29                                      
    30                                      
    31 00000013 83F800                      cmp EAX, 0
    32 00000016 7455                        jz end
    33                                      
    34 00000018 A3[7A000000]                mov [d_f], EAX
    35                                      
    36                                      
    37                                      loop1:
    38                                          
    39 0000001D 68[16000000]                    push buffer
    40 00000022 68[09000000]                    push f_str
    41 00000027 FF15[00000000]                  call [scanf]
    42 0000002D 83C408                          add ESP, 4*2
    43                                          
    44                                  
    45 00000030 BE[16000000]                    mov ESI, buffer
    46                                          loop2:
    47 00000035 AC                                  lodsb
    48 00000036 3C00                                cmp AL, 0
    49 00000038 7425                                jz loop_end
    50                                              
    51 0000003A 3C61                                cmp AL, 'a'
    52 0000003C 721F                                jb loop2_end
    53                                              
    54 0000003E 3C7A                                cmp AL, 'z'
    55 00000040 771B                                ja loop2_end
    56                                  
    57 00000042 68[16000000]                        push buffer
    58 00000047 68[7E000000]                        push f_d
    59 0000004C FF35[7A000000]                      push dword [d_f]
    60 00000052 FF15[00000000]                      call [fprintf]
    61 00000058 83C40C                              add ESP, 4*3
    62                                              
    63 0000005B EB02                                jmp loop_end
    64                                              
    65                                          loop2_end:
    66 0000005D EBD6                                jmp loop2
    67                                              
    68                                          loop_end:
    69 0000005F 8A15[0C000000]                  mov DL, [stop]
    70 00000065 3815[16000000]                  cmp [buffer], DL
    71 0000006B 75B0                            jne loop1
    72                                          
    73                                      
    74                                      end:
    75 0000006D 6A00                        push dword 0
    76 0000006F FF15[00000000]              call [exit]
