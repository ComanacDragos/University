     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, printf
     5                                  import exit msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9 00000000 25730A00                    format db "%s", 10, 0
    10 00000004 7936753537393869            s db "y6u5798i"
    11                                      len equ $-s
    12                                      
    13 0000000C 626C6131323334626C-         s2 db "bla1234bla"
    13 00000015 61                 
    14                                      len2 equ $-s2
    15 00000016 <res 000000C8>              res_base resb 200
    16                                      
    17                                  segment code use32 class=code
    18                                  get_base:
    19 00000000 8B742404                    mov ESI, [ESP+4]
    20 00000004 8B4C2408                    mov ECX, [ESP+8]
    21 00000008 BF[16000000]                mov EDI, res_base
    22                                      
    23                                      loop1:
    24 0000000D AC                              lodsb
    25 0000000E 3C30                            cmp AL, '0'
    26 00000010 7205                            jb endLoop
    27                                          
    28 00000012 3C39                            cmp AL, '9'
    29 00000014 7701                            ja endLoop
    30                                          
    31 00000016 AA                              stosb
    32                                          
    33                                      endLoop:
    34 00000017 E2F4                        loop loop1
    35                                      
    36                                      
    37                                      loop2:
    38 00000019 833F00                          cmp dword [EDI], 0
    39 0000001C 7409                            je endLoop2
    40                                          
    41 0000001E C70700000000                    mov dword [EDI], 0
    42 00000024 47                              inc EDI
    43 00000025 EBF2                            jmp loop2
    44                                  
    45                                      endLoop2:
    46 00000027 C3                         ret
    47                                      start:
    48                                      
    49 00000028 6A08                        push len
    50 0000002A 68[04000000]                push s
    51 0000002F E8CCFFFFFF                  call get_base
    52 00000034 83C408                      add ESP, 4*2
    53                                      
    54 00000037 68[16000000]                push res_base
    55 0000003C 68[00000000]                push format
    56 00000041 FF15[00000000]              call [printf]
    57 00000047 83C408                      add ESP, 4*2
    58                                      
    59                                     
    60 0000004A 6A0A                        push len2
    61 0000004C 68[0C000000]                push s2
    62 00000051 E8AAFFFFFF                  call get_base
    63 00000056 83C408                      add ESP, 4*2
    64                                      
    65 00000059 68[16000000]                push res_base
    66 0000005E 68[00000000]                push format
    67 00000063 FF15[00000000]              call [printf]
    68 00000069 83C408                      add ESP, 4*2
    69                                      
    70 0000006C 6A00                        push dword 0
    71 0000006E FF15[00000000]              call [exit]
    72                                  
