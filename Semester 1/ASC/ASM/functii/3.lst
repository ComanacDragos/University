     1                                  bits 32 
     2                                  global start
     3                                  
     4                                  extern exit, fopen, fread, fprintf, fclose
     5                                  import exit msvcrt.dll
     6                                  import fopen msvcrt.dll
     7                                  import fread msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  
    11                                  
    12                                  segment data use32 class=data
    13                                  
    14 00000000 666973696572322E74-         file db "fisier2.txt", 0
    14 00000009 787400             
    15 0000000C 612B00                      mode db "a+", 0
    16 0000000F 00000000                    desc dd 0
    17 00000013 0A256400                    format db 10,"%d", 0
    18 00000017 00000000                    medie dd 0
    19 0000001B <res 00000064>              numbers resb 100
    20                                      
    21                                      
    22                                      
    23                                  segment code use32 class=data
    24                                      
    25                                      start:
    26 00000000 68[0C000000]                push mode
    27 00000005 68[00000000]                push file
    28 0000000A FF15[00000000]              call [fopen]
    29 00000010 A3[0F000000]                mov [desc], EAX
    30                                  
    31 00000015 FF35[0F000000]              push dword [desc]
    32 0000001B 6A64                        push 100
    33 0000001D 6A01                        push 1
    34 0000001F 68[1B000000]                push numbers
    35 00000024 FF15[00000000]              call [fread]
    36 0000002A 83C410                      add esp, 4*4
    37                                      
    38 0000002D BE[1B000000]                mov ESI, numbers
    39 00000032 B900000000                  mov ECX, 0
    40                                      loop1:
    41 00000037 AC                              lodsb
    42 00000038 3C00                            cmp AL, 0
    43 0000003A 741E                            je endloop1
    44                                  
    45 0000003C 41                              inc ECX
    46                                          
    47 0000003D 803E30                          cmp byte [ESI], '0'
    48 00000040 750A                            jne digit
    49 00000042 8305[17000000]0A                add dword [medie], 10
    50 00000049 46                              inc ESI
    51 0000004A EBEB                            jmp loop1
    52                                          
    53                                          digit:
    54 0000004C 2C30                            sub AL, '0'
    55 0000004E 6698                            cbw
    56 00000050 98                              cwde
    57 00000051 0105[17000000]                  add dword [medie], EAX
    58 00000057 46                              inc ESI
    59                                          
    60                                      endLoop:    
    61 00000058 EBDD                        jmp loop1
    62                                      endloop1:
    63                                      
    64 0000005A A1[17000000]                mov EAX, [medie]
    65 0000005F BA00000000                  mov EDX, 0
    66 00000064 F7F1                        div ECX
    67                                      
    68 00000066 01D2                        add EDX, EDX
    69 00000068 39CA                        cmp EDX, ECX ; 2r nr <=> r< nr/2
    70 0000006A 7C01                        jl no_rounding
    71 0000006C 40                          inc EAX
    72                                      
    73                                      no_rounding:
    74                                  
    75                                      
    76 0000006D 50                          push EAX
    77 0000006E 68[13000000]                push format
    78 00000073 FF35[0F000000]              push dword [desc]
    79 00000079 FF15[00000000]              call [fprintf]
    80 0000007F 83C40C                      add esp, 4*3
    81                                      
    82 00000082 FF35[0F000000]              push dword [desc]
    83 00000088 FF15[00000000]              call [fclose]
    84                                      
    85 0000008E 6A00                        push dword 0
    86 00000090 FF15[00000000]              call [exit]
