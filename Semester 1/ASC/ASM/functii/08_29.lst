     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; Se citesc de la tastatura trei numere a, m si n (a: word, 0 <= m, n <= 15, m > n). Sa se izoleze bitii de la m-n ai lui a si sa se afiseze numarul intreg reprezentat de acesti bitii in baza 10.
    14                                  segment data use32 class=data
    15                                      
    16 00000000 64617469206E756D61-         mesaj db "dati numar: ", 0
    16 00000009 723A2000           
    17 0000000D 6E7220657374653A20-         mesaj2 db "nr este: %d", 0 
    17 00000016 256400             
    18                                      
    19 00000019 <res 00000002>              a resw 1
    20 0000001B <res 00000001>              m resb 1
    21 0000001C <res 00000001>              n resb 1
    22                                      
    23 0000001D 256400                      format db "%d", 0
    24                                      
    25                                      ; scanf(format,%d)
    26                                      
    27                                  
    28                                  ; our code starts here
    29                                  segment code use32 class=code
    30                                      start:
    31 00000000 68[00000000]                    push mesaj
    32 00000005 FF15[00000000]                  call [printf]
    33 0000000B 83C404                          add ESP, 4*1
    34                                          
    35 0000000E 68[19000000]                    push a
    36 00000013 68[1D000000]                    push format
    37 00000018 FF15[00000000]                  call [scanf]
    38                                          ;add ESP, 4*2
    39                                         
    40 0000001E 68[00000000]                    push mesaj
    41 00000023 FF15[00000000]                  call [printf]
    42 00000029 83C404                          add ESP, 4*1
    43                                          
    44 0000002C 68[1B000000]                    push m
    45 00000031 68[1D000000]                    push format
    46 00000036 FF15[00000000]                  call [scanf]
    47                                          ;add ESP, 4*2
    48                                          
    49 0000003C 68[00000000]                    push mesaj
    50 00000041 FF15[00000000]                  call [printf]
    51 00000047 83C404                          add ESP, 4*1
    52                                          
    53 0000004A 68[1C000000]                    push n
    54 0000004F 68[1D000000]                    push format
    55 00000054 FF15[00000000]                  call [scanf]
    56                                          ;add ESP, 4*2
    57                                      
    58                                      
    59                                      
    60                                      
    61                                      
    62                                      
    63                                      
    64                                      
    65                                          
    66                                          
    67                                          ; exit(0)
    68 0000005A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    69 0000005C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
