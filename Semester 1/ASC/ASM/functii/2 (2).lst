     1                                  bits 32
     2                                  global start
     3                                  extern exit, gets, printf, fread, fopen, fclose
     4                                  import exit msvcrt.dll
     5                                  import gets msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fread msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  
    11                                  segment data
    12 00000000 256300                      format db "%c", 0
    13 00000003 6669736965722E7478-         file db "fisier.txt", 0
    13 0000000C 7400               
    14 0000000E 7200                        mode db "r", 0
    15 00000010 00000000                    descriptor dd 0
    16 00000014 <res 00000064>              s resb 100
    17                                      
    18                                  
    19                                  segment code
    20                                      start:
    21 00000000 68[0E000000]                push mode
    22 00000005 68[03000000]                push file
    23 0000000A FF15[00000000]              call [fopen]
    24 00000010 83C408                      add esp, 4*2
    25                                      
    26 00000013 A3[10000000]                mov [descriptor], EAX
    27                                      
    28 00000018 FF35[10000000]              push dword [descriptor]
    29 0000001E 6A64                        push 100
    30 00000020 6A01                        push 1
    31 00000022 68[14000000]                push s
    32 00000027 FF15[00000000]              call [fread]
    33 0000002D 83C410                      add esp, 4*4
    34                                      
    35                                      
    36 00000030 BE[14000000]                mov esi, s
    37                                      loop1:
    38 00000035 AC                              lodsb
    39 00000036 3C00                            cmp al, 0
    40 00000038 743A                            je endLoop1
    41                                          
    42 0000003A 3C41                            cmp al, 'A'
    43 0000003C 7C1E                            jl endLoop
    44                                          
    45 0000003E 3C5A                            cmp AL, 'Z'
    46 00000040 7F0A                            jg notUpper
    47                                          
    48 00000042 2C02                            sub AL, 2
    49 00000044 3C41                            cmp AL, 'A'
    50 00000046 7D14                            jge endLoop
    51                                          
    52 00000048 041A                            add AL, 'z'-'a'+1
    53                                          
    54 0000004A EB10                            jmp endLoop
    55                                          
    56                                          
    57                                          
    58                                          notUpper:
    59 0000004C 3C61                            cmp AL, 'a'
    60 0000004E 7C0C                            jl endLoop
    61                                          
    62 00000050 3C7A                            cmp AL, 'z'
    63 00000052 7F08                            jg endLoop
    64                                          
    65                                          ;letter: lower:
    66 00000054 2C02                            sub AL, 2
    67                                          
    68 00000056 3C61                            cmp AL, 'a'
    69 00000058 7D02                            jge endLoop
    70                                          
    71 0000005A 041A                            add AL, 'z'-'a'+1
    72                                          ;add AL, 2
    73                                          
    74                                          
    75                                      endLoop:
    76                                      
    77 0000005C BB00000000                  mov EBX, 0
    78 00000061 88C3                        mov BL, AL
    79 00000063 53                          push EBX
    80 00000064 68[00000000]                push format
    81 00000069 FF15[00000000]              call [printf]
    82 0000006F 83C408                      add esp, 4*2
    83 00000072 EBC1                        jmp loop1
    84                                      endLoop1:
    85                                      
    86                                      
    87 00000074 FF35[10000000]              push dword [descriptor]
    88 0000007A FF15[00000000]              call [fclose]
    89 00000080 83C404                      add esp ,4
    90                                      
    91 00000083 6A00                        push dword 0
    92 00000085 FF15[00000000]              call [exit]
    93                                      
