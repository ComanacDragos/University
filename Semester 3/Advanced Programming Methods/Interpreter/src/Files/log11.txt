Execution stack
(
ref(int) v;
new(v, 20);
ref(ref(int)) a;
new(a, v);
print(readHeap(v););
print((readHeap(readHeap(a);); + 5));
)
Symbols table
Out
File table
Heap



Execution stack
(
ref(int) v;
new(v, 20);
ref(ref(int)) a;
new(a, v);
)
(
print(readHeap(v););
print((readHeap(readHeap(a);); + 5));
)
Symbols table
Out
File table
Heap



Execution stack
(
ref(int) v;
new(v, 20);
)
(
ref(ref(int)) a;
new(a, v);
)
(
print(readHeap(v););
print((readHeap(readHeap(a);); + 5));
)
Symbols table
Out
File table
Heap



Execution stack
(
ref(int) v;
)
(
new(v, 20);
)
(
ref(ref(int)) a;
new(a, v);
)
(
print(readHeap(v););
print((readHeap(readHeap(a);); + 5));
)
Symbols table
Out
File table
Heap



Execution stack
(
new(v, 20);
)
(
ref(ref(int)) a;
new(a, v);
)
(
print(readHeap(v););
print((readHeap(readHeap(a);); + 5));
)
Symbols table
v -> (0, int)
Out
File table
Heap



Execution stack
(
ref(ref(int)) a;
new(a, v);
)
(
print(readHeap(v););
print((readHeap(readHeap(a);); + 5));
)
Symbols table
v -> (1, int)
Out
File table
Heap
1 -> 20



Execution stack
(
ref(ref(int)) a;
)
(
new(a, v);
)
(
print(readHeap(v););
print((readHeap(readHeap(a);); + 5));
)
Symbols table
v -> (1, int)
Out
File table
Heap
1 -> 20



Execution stack
(
new(a, v);
)
(
print(readHeap(v););
print((readHeap(readHeap(a);); + 5));
)
Symbols table
v -> (1, int)
a -> (0, ref(int))
Out
File table
Heap
1 -> 20



Execution stack
(
print(readHeap(v););
print((readHeap(readHeap(a);); + 5));
)
Symbols table
v -> (1, int)
a -> (2, ref(int))
Out
File table
Heap
1 -> 20
2 -> (1, int)



Execution stack
(
print(readHeap(v););
)
(
print((readHeap(readHeap(a);); + 5));
)
Symbols table
v -> (1, int)
a -> (2, ref(int))
Out
File table
Heap
1 -> 20
2 -> (1, int)



Execution stack
(
print((readHeap(readHeap(a);); + 5));
)
Symbols table
v -> (1, int)
a -> (2, ref(int))
Out
20
File table
Heap
1 -> 20
2 -> (1, int)



Execution stack
Symbols table
v -> (1, int)
a -> (2, ref(int))
Out
20
25
File table
Heap
1 -> 20
2 -> (1, int)



