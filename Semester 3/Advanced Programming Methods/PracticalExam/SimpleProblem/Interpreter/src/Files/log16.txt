Program: 1
Execution stack
(
int v;
ref(int) a;
v = 10;
new(a, 22);
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
Out
File table
Heap



Program: 1
Execution stack
(
int v;
ref(int) a;
v = 10;
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
Out
File table
Heap



Program: 1
Execution stack
(
int v;
ref(int) a;
v = 10;
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
Out
File table
Heap



Program: 1
Execution stack
(
int v;
ref(int) a;
)
(
v = 10;
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
Out
File table
Heap



Program: 1
Execution stack
(
int v;
ref(int) a;
)
(
v = 10;
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
Out
File table
Heap



Program: 1
Execution stack
(
int v;
)
(
ref(int) a;
)
(
v = 10;
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
Out
File table
Heap



Program: 1
Execution stack
(
int v;
)
(
ref(int) a;
)
(
v = 10;
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
Out
File table
Heap



Program: 1
Execution stack
(
ref(int) a;
)
(
v = 10;
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
v -> 0
Out
File table
Heap



Program: 1
Execution stack
(
ref(int) a;
)
(
v = 10;
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
v -> 0
Out
File table
Heap



Program: 1
Execution stack
(
v = 10;
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
a -> (0, int)
v -> 0
Out
File table
Heap



Program: 1
Execution stack
(
v = 10;
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
a -> (0, int)
v -> 0
Out
File table
Heap



Program: 1
Execution stack
(
v = 10;
)
(
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
a -> (0, int)
v -> 0
Out
File table
Heap



Program: 1
Execution stack
(
v = 10;
)
(
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
a -> (0, int)
v -> 0
Out
File table
Heap



Program: 1
Execution stack
(
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
a -> (0, int)
v -> 10
Out
File table
Heap



Program: 1
Execution stack
(
new(a, 22);
)
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
a -> (0, int)
v -> 10
Out
File table
Heap



Program: 1
Execution stack
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22



Program: 1
Execution stack
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22



Program: 1
Execution stack
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
)
(
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22



Program: 1
Execution stack
(
fork(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
)
(
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22



Program: 1
Execution stack
(
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22



Program: 2
Execution stack
(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22



Program: 1
Execution stack
(
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22



Program: 2
Execution stack
(
writeHeap(a, 30);
v = 32;
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22



Program: 1
Execution stack
(
print(v);
)
(
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22



Program: 2
Execution stack
(
writeHeap(a, 30);
)
(
v = 32;
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22



Program: 1
Execution stack
(
print(v);
)
(
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22



Program: 2
Execution stack
(
writeHeap(a, 30);
)
(
v = 32;
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
File table
Heap
1 -> 22



Program: 1
Execution stack
(
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
10
File table
Heap
1 -> 30



Program: 2
Execution stack
(
v = 32;
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
10
File table
Heap
1 -> 30



Program: 1
Execution stack
(
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
10
File table
Heap
1 -> 30



Program: 2
Execution stack
(
v = 32;
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
10
File table
Heap
1 -> 30



Program: 1
Execution stack
Symbols table
a -> (1, int)
v -> 10
Out
10
30
File table
Heap
1 -> 30



Program: 2
Execution stack
(
v = 32;
)
(
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
10
30
File table
Heap
1 -> 30



Program: 2
Execution stack
(
v = 32;
)
(
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 10
Out
10
30
File table
Heap
1 -> 30



Program: 2
Execution stack
(
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 32
Out
10
30
File table
Heap
1 -> 30



Program: 2
Execution stack
(
print(v);
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 32
Out
10
30
File table
Heap
1 -> 30



Program: 2
Execution stack
(
print(v);
)
(
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 32
Out
10
30
File table
Heap
1 -> 30



Program: 2
Execution stack
(
print(v);
)
(
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 32
Out
10
30
File table
Heap
1 -> 30



Program: 2
Execution stack
(
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 32
Out
10
30
32
File table
Heap
1 -> 30



Program: 2
Execution stack
(
print(readHeap(a));
)
Symbols table
a -> (1, int)
v -> 32
Out
10
30
32
File table
Heap
1 -> 30



Program: 2
Execution stack
Symbols table
a -> (1, int)
v -> 32
Out
10
30
32
30
File table
Heap
1 -> 30



